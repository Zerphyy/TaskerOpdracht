// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Setup.Data;

#nullable disable

namespace Setup.Migrations
{
    [DbContext(typeof(WebpageDBContext))]
    [Migration("20230310144215_DBAlterations")]
    partial class DBAlterations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Setup.Data.ContactData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Bellen")
                        .HasColumnType("datetime2");

                    b.Property<string>("Bericht")
                        .IsRequired()
                        .HasMaxLength(600)
                        .HasColumnType("nvarchar(600)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Nieuwsbrief")
                        .HasColumnType("bit");

                    b.Property<string>("Onderwerp")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContactData");
                });

            modelBuilder.Entity("Setup.Data.DamBord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("DamBord");
                });

            modelBuilder.Entity("Setup.Data.DamBordVakje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Col")
                        .HasColumnType("int");

                    b.Property<int?>("DamBordId")
                        .HasColumnType("int");

                    b.Property<int?>("DamStukId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("Row")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DamBordId");

                    b.HasIndex("DamStukId");

                    b.ToTable("DamBordVakje");
                });

            modelBuilder.Entity("Setup.Data.DamSpel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<int>("DamBordId")
                        .HasColumnType("int");

                    b.Property<int?>("DeelnemerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsSpelVoorbij")
                        .HasColumnType("bit");

                    b.Property<string>("SpelNaam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WinnaarId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("DamBordId");

                    b.HasIndex("DeelnemerId");

                    b.HasIndex("WinnaarId");

                    b.ToTable("DamSpel");
                });

            modelBuilder.Entity("Setup.Data.DamStuk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Kleur")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DamStuk");
                });

            modelBuilder.Entity("Setup.Data.Speler", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wachtwoord")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Speler");
                });

            modelBuilder.Entity("Setup.Data.SpelerStats", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("AantalGewonnen")
                        .HasColumnType("int");

                    b.Property<int>("AantalSpellen")
                        .HasColumnType("int");

                    b.Property<int>("AantalVerloren")
                        .HasColumnType("int");

                    b.Property<int>("LangsteWinstreak")
                        .HasColumnType("int");

                    b.Property<int>("SpelerID")
                        .HasColumnType("int");

                    b.Property<int>("WinLossRatio")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SpelerID");

                    b.ToTable("SpelerStats");
                });

            modelBuilder.Entity("Setup.Data.DamBordVakje", b =>
                {
                    b.HasOne("Setup.Data.DamBord", null)
                        .WithMany("DamBordVakjes")
                        .HasForeignKey("DamBordId");

                    b.HasOne("Setup.Data.DamStuk", "DamStuk")
                        .WithMany()
                        .HasForeignKey("DamStukId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DamStuk");
                });

            modelBuilder.Entity("Setup.Data.DamSpel", b =>
                {
                    b.HasOne("Setup.Data.Speler", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Setup.Data.DamBord", "DamBord")
                        .WithMany()
                        .HasForeignKey("DamBordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Setup.Data.Speler", "Deelnemer")
                        .WithMany()
                        .HasForeignKey("DeelnemerId");

                    b.HasOne("Setup.Data.Speler", "Winnaar")
                        .WithMany()
                        .HasForeignKey("WinnaarId");

                    b.Navigation("Creator");

                    b.Navigation("DamBord");

                    b.Navigation("Deelnemer");

                    b.Navigation("Winnaar");
                });

            modelBuilder.Entity("Setup.Data.SpelerStats", b =>
                {
                    b.HasOne("Setup.Data.Speler", "Speler")
                        .WithMany()
                        .HasForeignKey("SpelerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Speler");
                });

            modelBuilder.Entity("Setup.Data.DamBord", b =>
                {
                    b.Navigation("DamBordVakjes");
                });
#pragma warning restore 612, 618
        }
    }
}
